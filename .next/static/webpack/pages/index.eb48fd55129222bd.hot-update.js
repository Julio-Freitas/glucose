"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/utils/validationForm.ts":
/*!*************************************!*\
  !*** ./src/utils/validationForm.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"validationForm\": function() { return /* binding */ validationForm; }\n/* harmony export */ });\nvar validationForm = function validationForm(_ref) {\n  var date = _ref.date,\n      time = _ref.time,\n      glucose = _ref.glucose;\n  var isFill = !date || !time || !glucose;\n  var monthCurrent = new Date().getMonth() + 1;\n  var monthForm = Number(date === null || date === void 0 ? void 0 : date.split(\"-\")[1]); //   if (isFill) {\n  //     return {\n  //       msg: \"Os campo date, hora ou glicemia devem ser preenchidos!\",\n  //       hidden: true,\n  //       type: \"warn\",\n  //     };\n  //   }\n  //   if (monthForm > monthCurrent) {\n  //     return {\n  //       msg: \"Não é possivel lançar datas futuras\",\n  //       hidden: true,\n  //       type: \"warn\",\n  //     };\n  //   }\n\n  return isFill || monthForm > monthCurrent;\n};\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvdmFsaWRhdGlvbkZvcm0udHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUVPLElBQU1BLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUIsT0FJaUI7RUFBQSxJQUg3Q0MsSUFHNkMsUUFIN0NBLElBRzZDO0VBQUEsSUFGN0NDLElBRTZDLFFBRjdDQSxJQUU2QztFQUFBLElBRDdDQyxPQUM2QyxRQUQ3Q0EsT0FDNkM7RUFDN0MsSUFBTUMsTUFBTSxHQUFHLENBQUNILElBQUQsSUFBUyxDQUFDQyxJQUFWLElBQWtCLENBQUNDLE9BQWxDO0VBQ0EsSUFBTUUsWUFBWSxHQUFHLElBQUlDLElBQUosR0FBV0MsUUFBWCxLQUF3QixDQUE3QztFQUNBLElBQU1DLFNBQVMsR0FBR0MsTUFBTSxDQUFDUixJQUFELGFBQUNBLElBQUQsdUJBQUNBLElBQUksQ0FBRVMsS0FBTixDQUFZLEdBQVosRUFBaUIsQ0FBakIsQ0FBRCxDQUF4QixDQUg2QyxDQUsvQztFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUVBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztFQUVFLE9BQU9OLE1BQU0sSUFBSUksU0FBUyxHQUFHSCxZQUE3QjtBQUNELENBMUJNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy91dGlscy92YWxpZGF0aW9uRm9ybS50cz9jZDU2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEl0ZW0gfSBmcm9tIFwidHlwZXMvbGlzdFwiO1xuXG5leHBvcnQgY29uc3QgdmFsaWRhdGlvbkZvcm0gPSAoe1xuICBkYXRlLFxuICB0aW1lLFxuICBnbHVjb3NlLFxufTogUGljazxJdGVtLCBcImdsdWNvc2VcIiB8IFwidGltZVwiIHwgXCJkYXRlXCI+KSA9PiB7XG4gIGNvbnN0IGlzRmlsbCA9ICFkYXRlIHx8ICF0aW1lIHx8ICFnbHVjb3NlO1xuICBjb25zdCBtb250aEN1cnJlbnQgPSBuZXcgRGF0ZSgpLmdldE1vbnRoKCkgKyAxO1xuICBjb25zdCBtb250aEZvcm0gPSBOdW1iZXIoZGF0ZT8uc3BsaXQoXCItXCIpWzFdKTtcblxuLy8gICBpZiAoaXNGaWxsKSB7XG4vLyAgICAgcmV0dXJuIHtcbi8vICAgICAgIG1zZzogXCJPcyBjYW1wbyBkYXRlLCBob3JhIG91IGdsaWNlbWlhIGRldmVtIHNlciBwcmVlbmNoaWRvcyFcIixcbi8vICAgICAgIGhpZGRlbjogdHJ1ZSxcbi8vICAgICAgIHR5cGU6IFwid2FyblwiLFxuLy8gICAgIH07XG4vLyAgIH1cblxuLy8gICBpZiAobW9udGhGb3JtID4gbW9udGhDdXJyZW50KSB7XG4vLyAgICAgcmV0dXJuIHtcbi8vICAgICAgIG1zZzogXCJOw6NvIMOpIHBvc3NpdmVsIGxhbsOnYXIgZGF0YXMgZnV0dXJhc1wiLFxuLy8gICAgICAgaGlkZGVuOiB0cnVlLFxuLy8gICAgICAgdHlwZTogXCJ3YXJuXCIsXG4vLyAgICAgfTtcbi8vICAgfVxuXG4gIHJldHVybiBpc0ZpbGwgfHwgbW9udGhGb3JtID4gbW9udGhDdXJyZW50O1xufTtcbiJdLCJuYW1lcyI6WyJ2YWxpZGF0aW9uRm9ybSIsImRhdGUiLCJ0aW1lIiwiZ2x1Y29zZSIsImlzRmlsbCIsIm1vbnRoQ3VycmVudCIsIkRhdGUiLCJnZXRNb250aCIsIm1vbnRoRm9ybSIsIk51bWJlciIsInNwbGl0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/validationForm.ts\n"));

/***/ })

});